cmake_minimum_required(VERSION 3.30.0 FATAL_ERROR)


add_library(External_libs INTERFACE)

find_package(SDL3 QUIET)

#=======SDL3=========Simple__DirectMedia__Layer==========SDL3============
    # 1. Try system SDL3 package first
    if(SDL3_FOUND)
        message(STATUS "Using SDL3 via find_package")
    endif()

    # 2. Try using a vendored SDL library
    if(NOT SDL3_FOUND AND EXISTS "${CMAKE_CURRENT_LIST_DIR}/SDL/CMakeLists.txt")
        add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/SDL EXCLUDE_FROM_ALL)
        message(STATUS "Using SDL3 via add_subdirectory")
        set(SDL3_FOUND TRUE)
    endif()

    # 3. Download SDL, and use that.
    if(NOT SDL3_FOUND)
        include(FetchContent)
        set(FETCHCONTENT_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/SDL CACHE PATH "Missing description." FORCE)

        set(SDL_SHARED TRUE CACHE BOOL "Build a SDL shared library (if available)")

        set(SDL_STATIC OFF CACHE BOOL "Build a SDL static library (if available)")
        set(SDL_TEST_LIBRARY OFF)
        set(SDL_TESTS OFF)
        set(SDL_DISABLE_INSTALL OFF)
        set(SDL_DISABLE_INSTALL_DOCS OFF)
        set(SDL_INSTALL_TEST OFF)
        
        FetchContent_Declare(
            SDL
            GIT_REPOSITORY https://github.com/libsdl-org/SDL.git
            GIT_TAG main  # Replace this with a particular git tag or git hash
            GIT_SHALLOW TRUE
            GIT_PROGRESS TRUE
        )
        message(STATUS "Using SDL3 via FetchContent")
        FetchContent_MakeAvailable(SDL)
    endif()

    target_link_libraries(External_libs INTERFACE SDL3::SDL3)
#=======SDL3=========Simple__DirectMedia__Layer==========SDL3============